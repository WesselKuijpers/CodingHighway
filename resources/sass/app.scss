
// Fonts
@import url('https://fonts.googleapis.com/css?family=Nunito');

// Variables
@import 'variables';

// Bootstrap
@import '~bootstrap/scss/bootstrap';

/*
  <----- Navbar styling ----->
*/
@media (max-width: 450px) {
  body {
    margin-top: 50px;
  }
  .navbar{
    z-index: 1200;
    position: fixed;
    right: 0;
    left: 0;
    border-radius: 0;
    top: 0;
  }
}
.navbar-laravel {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
  background: rgba(255,255,255,1);
}
/*
  <----- Footer styling ----->
*/

// Used for a sticky footer
html {
  position: relative;
  min-height: 100%;
}
body {
  /* Margin bottom by footer height */
  margin-bottom: 60px;
}

.footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 60px;
  line-height: 60px;
  -moz-box-shadow: 0 -5px 6px rgba(0,0,0,0.5);
  -webkit-box-shadow: 0 -5px 6px rgba(0,0,0,0.5);
  box-shadow: 2px 0px 2px lightgray;
  background: #f8fafc;
  color: rgba(0, 0, 0, 0.5); /* Vertically center the text there */
}

/*
  <----- Homepage styling ----->
*/

.main-text-block {
  max-height: 300px;
  height: 300px;
}

.side-block {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 46.66666667%;
  flex: 1 0 46.666667%;
  max-width: 46.666667%;
}

.nav-logo {
  height: 50px;
  width: auto;
}

/*
  <----- Form styling ----->
*/

.form-box {
  background-color: #fff;
  padding: 15px;
}

/*
  <----- Page styling ----->
*/

.page-header {
  font-family: 'Galdeano', sans-serif;
  font-size: 35px;
  padding-top: 30px;
}

/* Bootstrap Toggle v2.2.2 corrections for Bootsrtap 4*/
.toggle-off {
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.toggle.off {
  border-color: rgba(0, 0, 0, .25);
}

.toggle-handle {
  background-color: white;
  border: thin rgba(0, 0, 0, .25) solid;
}

.no-link, a:hover.no-link {
    text-decoration: none;
}

.custom-card {
  min-height: 300px;
  width: auto;
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
}

.organisation-card {
  min-height: 560px;
}

.img-h-250 {
  height: 250px;
  width: auto;
  margin: 0px auto;
}
// Form styling

.contact-form{
  box-shadow: 5px 5px 10px grey;
  background: #f3f3f3;
}
.contact-form .form-control{
  border-radius:1rem;
}
.contact-form form{
  padding: 5% 10%;
  padding-bottom: 10%;
}
.contact-form form .row{
  margin-bottom: -7%;
}
.contact-form h3{
  margin-bottom: 8%;
  margin-top: -10%;
  text-align: center;
}
.contact-form .btnContact {
  width: 50%;
  border: none;
  border-radius: 1rem;
  padding: 1.5%;
  font-weight: 600;
  cursor: pointer;
  background-color: #4584AB;
  color: #F3F3F3;
}
.btnContactSubmit
{
  width: 50%;
  border-radius: 1rem;
  padding: 1.5%;
  border: none;
  cursor: pointer;
}

.form-control-file {
  overflow: hidden !important;
}

.custom-img {
  width: auto;
  max-height: 350px;
}
// Bootstrap overwrites

.btn-outline-dark:hover {
  color: #343a40;
  background-color: transparent;
  background-image: none;
  border-color: #343a40;
}

.progress-bar {
  background-color: black;
  color: white;
}

:root {
  /* theme color variables to use in RGB declarations */
  /*the threshold at which colors are considered "light".
Range: decimals from 0 to 1,
recommended 0.5 - 0.6*/
  --threshold: 0.6;

  --redCustom: #000000;
  --blueCustom: #000000;
  --greenCustom: #000000;

  /*the threshold at which a darker border will be applied.
Range: decimals from 0 to 1,
recommended 0.8+*/
  --border-threshold: 0.8;
}

.btn-test {
  /*sets the background for the base class*/
  background: rgb(var(--redCustom), var(--greenCustom), var(--blueCustom));

  /*
  W3C luma method
  lightness = (red * 0.299 + green * 0.587 + blue * 0.114) / 255
*/
  --r: calc(var(--redCustom) * 0.2126);
  --g: calc(var(--greenCustom) * 0.7152);
  --b: calc(var(--blueCustom) * 0.0722);

  --sum: calc(var(--r) + var(--g) + var(--b));

  --perceived-lightness: calc(var(--sum) / 255);

  /*
  1) Any lightness value above the threshold will be considered "light", therefore apply a black text color. Any bellow will be considered dark, and use white color.
  This results from appying either a sub-zero (negative) or a higher-than-100 lightness value, which are capped to 0 and 100 respectively, to a HSL declaration
  */
  color: hsl(0, 0%, calc((var(--perceived-lightness) - var(--threshold)) * -10000000%));

  /*
  2) sets the border as a 50% darker shade of the base color, ONLY if background color luma is higher than the border threshold.
  To achieve this I use the same sub-zero or higher-than-max technique, only this time using the Alpha value from an RGBA declaration.
  This results in a border that's either fully transparent or fully opaque
  */
  --border-alpha: calc((var(--perceived-lightness) - var(--border-threshold)) * 100);

  border-width: .2em;
  border-style: solid;
  border-color: rgba(calc(var(--redCustom) - 50), calc(var(--greenCustom) - 50), calc(var(--blueCustom) - 50), var(--border-alpha));
}
